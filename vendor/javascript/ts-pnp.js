import e from"pnpapi";import o from"process";var r={};var t=o;function resolveModuleName(o,r,t,i,s){const l=e;const[,c=``,n=``,d]=o.match(/^(!(?:.*!)+)?((?!\.{0,2}\/)(?:@[^\/]+\/)?[^\/]+)?(.*)/);let a=[];if(n){const e=`@types/${n.replace(/\//g,`__`)}${d}`;let o;try{o=l.resolveToUnqualified(e,r,{considerBuiltins:false})}catch(e){}if(o){i.directoryExists&&i.directoryExists(o)&&(o+=`/`);const e=s(o,r,t,i);if(e.resolvedModule||e.resolvedTypeReferenceDirective)return e;a=a.concat(e.failedLookupLocations)}}if(true){const e=`${n||``}${d}`;let o;try{o=l.resolveToUnqualified(e,r,{considerBuiltins:false})}catch(e){}if(o){i.directoryExists&&i.directoryExists(o)&&(o+=`/`);const e=s(o,r,t,i);if(e.resolvedModule||e.resolvedTypeReferenceDirective)return e;a=a.concat(e.failedLookupLocations)}}return{resolvedModule:void 0,resolvedTypeReferenceDirective:void 0,failedLookupLocations:a}}r.resolveModuleName=t.versions.pnp?resolveModuleName:(e,o,r,t,i)=>i(e,o,r,t);const i=r.resolveModuleName;export default r;export{i as resolveModuleName};

