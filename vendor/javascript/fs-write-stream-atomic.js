import e from"graceful-fs";import t from"readable-stream";import r from"util";import i from"imurmurhash";import o from"iferr";import a from"crypto";import n from"process";var m="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof self?self:global;var c={};var s=n;var l=e;var u=t.Writable;var h=r;var f=i;var p=o;var _=a;function murmurhex(){var e=f("");for(var t=0;t<arguments.length;++t)e.hash(""+arguments[t]);return e.result()}var d=0;function getTmpname(e){return e+"."+murmurhex(new URL(import.meta.url).pathname,s.pid,++d)}var v=m.setImmediate||setTimeout;c=WriteStreamAtomic;h.inherits(WriteStreamAtomic,u);function WriteStreamAtomic(e,t){if(!((this||m)instanceof WriteStreamAtomic))return new WriteStreamAtomic(e,t);u.call(this||m,t);(this||m).__isWin=t&&t.hasOwnProperty("isWin")?t.isWin:"win32"===s.platform;(this||m).__atomicTarget=e;(this||m).__atomicTmp=getTmpname(e);(this||m).__atomicChown=t&&t.chown;(this||m).__atomicClosed=false;(this||m).__atomicStream=l.WriteStream((this||m).__atomicTmp,t);(this||m).__atomicStream.once("open",handleOpen(this||m));(this||m).__atomicStream.once("close",handleClose(this||m));(this||m).__atomicStream.once("error",handleError(this||m))}WriteStreamAtomic.prototype.emit=function(e){return"finish"===e?(this||m).__atomicStream.end():u.prototype.emit.apply(this||m,arguments)};WriteStreamAtomic.prototype._write=function(e,t,r){var i=(this||m).__atomicStream.write(e,t);if(i)return r();(this||m).__atomicStream.once("drain",r)};function handleOpen(e){return function(t){e.emit("open",t)}}function handleClose(e){return function(){if(!e.__atomicClosed){e.__atomicClosed=true;if(e.__atomicChown){var t=e.__atomicChown.uid;var r=e.__atomicChown.gid;return l.chown(e.__atomicTmp,t,r,p(cleanup,moveIntoPlace))}moveIntoPlace()}};function moveIntoPlace(){l.rename(e.__atomicTmp,e.__atomicTarget,p(trapWindowsEPERM,end))}function trapWindowsEPERM(t){e.__isWin&&t.syscall&&"rename"===t.syscall&&t.code&&"EPERM"===t.code?checkFileHashes(t):cleanup(t)}function checkFileHashes(t){var r=2;var i=_.createHash("sha512");var o=_.createHash("sha512");l.createReadStream(e.__atomicTmp).on("data",(function(e,t){i.update(e,t)})).on("error",fileHashError).on("end",fileHashComplete);l.createReadStream(e.__atomicTarget).on("data",(function(e,t){o.update(e,t)})).on("error",fileHashError).on("end",fileHashComplete);function fileHashError(){if(0!==r){r=0;cleanup(t)}}function fileHashComplete(){if(0!==r&&!--r)return i.digest("hex")===o.digest("hex")?cleanup():cleanup(t)}}function cleanup(t){l.unlink(e.__atomicTmp,(function(){if(t){e.emit("error",t);e.emit("close")}else end()}))}function end(){u.prototype.emit.call(e,"finish");v((function(){e.emit("close")}))}}function handleError(e){return function(t){cleanupSync();e.emit("error",t);e.__atomicClosed=true;e.emit("close")};function cleanupSync(){try{l.unlinkSync(e.__atomicTmp)}finally{return}}}var S=c;export default S;

