import e from"webpack";import t from"webpack-sources";import{e as n}from"../_/79f0a069.js";var s={};function _nullRequire(e){var t=new Error("Cannot find module '"+e+"'");t.code="MODULE_NOT_FOUND";throw t}_nullRequire.resolve=_nullRequire;Object.defineProperty(s,"__esModule",{value:true});s.default=void 0;var i=_interopRequireDefault(e);var r=_interopRequireDefault(t);var a=_interopRequireDefault(n);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const{ConcatSource:o,SourceMapSource:d,OriginalSource:l}=r.default;const{Template:h,util:{createHash:u}}=i.default;const c="css/mini-extract";const f="mini-css-extract-plugin";const p=/\[chunkhash(?::(\d+))?\]/i;const g=/\[contenthash(?::(\d+))?\]/i;const m=/\[name\]/i;const k=/\[(name|id|chunkhash)\]/g;const C="[name].css";class CssDependencyTemplate{apply(){}}class CssModule extends i.default.Module{constructor(e){super(c,e.context);this.id="";this._identifier=e.identifier;this._identifierIndex=e.identifierIndex;this.content=e.content;this.media=e.media;this.sourceMap=e.sourceMap}size(){return this.content.length}identifier(){return`css ${this._identifier} ${this._identifierIndex}`}readableIdentifier(e){return`css ${e.shorten(this._identifier)}${this._identifierIndex?` (${this._identifierIndex})`:""}`}nameForCondition(){const e=this._identifier.split("!").pop();const t=e.indexOf("?");return t>=0?e.substring(0,t):e}updateCacheModule(e){this.content=e.content;this.media=e.media;this.sourceMap=e.sourceMap}needRebuild(){return true}build(e,t,n,s,i){this.buildInfo={};this.buildMeta={};i()}updateHash(e){super.updateHash(e);e.update(this.content);e.update(this.media||"");e.update(this.sourceMap?JSON.stringify(this.sourceMap):"")}}class CssModuleFactory{create({dependencies:[e]},t){t(null,new CssModule(e))}}class MiniCssExtractPlugin{constructor(e={}){this.options=Object.assign({filename:C,moduleFilename:()=>this.options.filename||C,ignoreOrder:false},e);if(!this.options.chunkFilename){const{filename:e}=this.options;e.match(k)?this.options.chunkFilename=e:this.options.chunkFilename=e.replace(/(^|\/)([^/]*(?:\?|$))/,"$1[id].$2")}}apply(e){e.hooks.thisCompilation.tap(f,e=>{e.dependencyFactories.set(a.default,new CssModuleFactory);e.dependencyTemplates.set(a.default,new CssDependencyTemplate);e.mainTemplate.hooks.renderManifest.tap(f,(t,{chunk:n})=>{const s=Array.from(n.modulesIterable).filter(e=>e.type===c);s.length>0&&t.push({render:()=>this.renderContentAsset(e,n,s,e.runtimeTemplate.requestShortener),filenameTemplate:({chunk:e})=>this.options.moduleFilename(e),pathOptions:{chunk:n,contentHashType:c},identifier:`${f}.${n.id}`,hash:n.contentHash[c]})});e.chunkTemplate.hooks.renderManifest.tap(f,(t,{chunk:n})=>{const s=Array.from(n.modulesIterable).filter(e=>e.type===c);s.length>0&&t.push({render:()=>this.renderContentAsset(e,n,s,e.runtimeTemplate.requestShortener),filenameTemplate:this.options.chunkFilename,pathOptions:{chunk:n,contentHashType:c},identifier:`${f}.${n.id}`,hash:n.contentHash[c]})});e.mainTemplate.hooks.hashForChunk.tap(f,(e,t)=>{const{chunkFilename:n}=this.options;p.test(n)&&e.update(JSON.stringify(t.getChunkMaps(true).hash));g.test(n)&&e.update(JSON.stringify(t.getChunkMaps(true).contentHash[c]||{}));m.test(n)&&e.update(JSON.stringify(t.getChunkMaps(true).name))});e.hooks.contentHash.tap(f,t=>{const{outputOptions:n}=e;const{hashFunction:s,hashDigest:i,hashDigestLength:r}=n;const a=u(s);for(const e of t.modulesIterable)e.type===c&&e.updateHash(a);const{contentHash:o}=t;o[c]=a.digest(i).substring(0,r)});const{mainTemplate:t}=e;t.hooks.localVars.tap(f,(e,t)=>{const n=this.getCssChunkObject(t);return Object.keys(n).length>0?h.asString([e,"","// object to store loaded CSS chunks","var installedCssChunks = {",h.indent(t.ids.map(e=>`${JSON.stringify(e)}: 0`).join(",\n")),"}"]):e});t.hooks.requireEnsure.tap(f,(e,n,s)=>{const i=this.getCssChunkObject(n);if(Object.keys(i).length>0){const r=n.getChunkMaps();const{crossOriginLoading:a}=t.outputOptions;const o=t.getAssetPath(JSON.stringify(this.options.chunkFilename),{hash:`" + ${t.renderCurrentHashCode(s)} + "`,hashWithLength:e=>`" + ${t.renderCurrentHashCode(s,e)} + "`,chunk:{id:'" + chunkId + "',hash:`" + ${JSON.stringify(r.hash)}[chunkId] + "`,hashWithLength(e){const t=Object.create(null);for(const n of Object.keys(r.hash))"string"===typeof r.hash[n]&&(t[n]=r.hash[n].substring(0,e));return`" + ${JSON.stringify(t)}[chunkId] + "`},contentHash:{[c]:`" + ${JSON.stringify(r.contentHash[c])}[chunkId] + "`},contentHashWithLength:{[c]:e=>{const t={};const n=r.contentHash[c];for(const s of Object.keys(n))"string"===typeof n[s]&&(t[s]=n[s].substring(0,e));return`" + ${JSON.stringify(t)}[chunkId] + "`}},name:`" + (${JSON.stringify(r.name)}[chunkId]||chunkId) + "`},contentHashType:c});return h.asString([e,"",`// ${f} CSS loading`,`var cssChunks = ${JSON.stringify(i)};`,"if(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);","else if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {",h.indent(["promises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {",h.indent([`var href = ${o};`,`var fullhref = ${t.requireFn}.p + href;`,'var existingLinkTags = document.getElementsByTagName("link");',"for(var i = 0; i < existingLinkTags.length; i++) {",h.indent(["var tag = existingLinkTags[i];",'var dataHref = tag.getAttribute("data-href") || tag.getAttribute("href");','if(tag.rel === "stylesheet" && (dataHref === href || dataHref === fullhref)) return resolve();']),"}",'var existingStyleTags = document.getElementsByTagName("style");',"for(var i = 0; i < existingStyleTags.length; i++) {",h.indent(["var tag = existingStyleTags[i];",'var dataHref = tag.getAttribute("data-href");',"if(dataHref === href || dataHref === fullhref) return resolve();"]),"}",'var linkTag = document.createElement("link");','linkTag.rel = "stylesheet";','linkTag.type = "text/css";',"linkTag.onload = resolve;","linkTag.onerror = function(event) {",h.indent(["var request = event && event.target && event.target.src || fullhref;",'var err = new Error("Loading CSS chunk " + chunkId + " failed.\\n(" + request + ")");','err.code = "CSS_CHUNK_LOAD_FAILED";',"err.request = request;","delete installedCssChunks[chunkId]","linkTag.parentNode.removeChild(linkTag)","reject(err);"]),"};","linkTag.href = fullhref;",a?h.asString([`if (linkTag.href.indexOf(window.location.origin + '/') !== 0) {`,h.indent(`linkTag.crossOrigin = ${JSON.stringify(a)};`),"}"]):"",'var head = document.getElementsByTagName("head")[0];',"head.appendChild(linkTag);"]),"}).then(function() {",h.indent(["installedCssChunks[chunkId] = 0;"]),"}));"]),"}"])}return e})})}getCssChunkObject(e){const t={};for(const n of e.getAllAsyncChunks())for(const e of n.modulesIterable)if(e.type===c){t[n.id]=1;break}return t}renderContentAsset(e,t,n,s){let i;const[r]=t.groupsIterable;if("function"===typeof r.getModuleIndex2){const r=new Map(n.map(e=>[e,new Set]));const a=new Map(n.map(e=>[e,new Map]));const o=Array.from(t.groupsIterable,e=>{const t=n.map(t=>({module:t,index:e.getModuleIndex2(t)})).filter(e=>void 0!==e.index).sort((e,t)=>t.index-e.index).map(e=>e.module);for(let n=0;n<t.length;n++){const s=r.get(t[n]);const i=a.get(t[n]);for(let r=n+1;r<t.length;r++){const n=t[r];s.add(n);const a=i.get(n)||new Set;a.add(e);i.set(n,a)}}return t});i=new Set;const unusedModulesFilter=e=>!i.has(e);while(i.size<n.length){let n=false;let d;let l;for(const e of o){while(e.length>0&&i.has(e[e.length-1]))e.pop();if(0!==e.length){const t=e[e.length-1];const s=r.get(t);const a=Array.from(s).filter(unusedModulesFilter);if(!l||l.length>a.length){d=e;l=a}if(0===a.length){i.add(e.pop());n=true;break}}}if(!n){const n=d.pop();if(!this.options.ignoreOrder){const i=a.get(n);e.warnings.push(new Error([`chunk ${t.name||t.id} [${f}]`,"Conflicting order. Following module has been added:",` * ${n.readableIdentifier(s)}`,"despite it was not able to fulfill desired ordering with these modules:",...l.map(e=>{const t=a.get(e);const r=t&&t.get(n);const o=Array.from(i.get(e),e=>e.name).join(", ");const d=r&&Array.from(r,e=>e.name).join(", ");return[` * ${e.readableIdentifier(s)}`,`   - couldn't fulfill desired order of chunk group(s) ${o}`,d&&`   - while fulfilling desired order of chunk group(s) ${d}`].filter(Boolean).join("\n")})].join("\n")))}i.add(n)}}}else{n.sort((e,t)=>e.index2-t.index2);i=n}const a=new o;const h=new o;for(const e of i)if(/^@import url/.test(e.content)){let{content:t}=e;e.media&&(t=t.replace(/;|\s*$/,e.media));h.add(t);h.add("\n")}else{e.media&&a.add(`@media ${e.media} {\n`);e.sourceMap?a.add(new d(e.content,e.readableIdentifier(s),e.sourceMap)):a.add(new l(e.content,e.readableIdentifier(s)));a.add("\n");e.media&&a.add("}\n")}return new o(h,a)}}MiniCssExtractPlugin.loader="./loader";var y=MiniCssExtractPlugin;s.default=y;var b={};b=s.default;var O=b;const v=b.__esModule;export default O;export{v as __esModule};

