const t=new Uint32Array(65536);const myers_32=(e,n)=>{const o=e.length;const c=n.length;const l=1<<o-1;let s=-1;let r=0;let h=o;let a=o;while(a--)t[e.charCodeAt(a)]|=1<<a;for(a=0;a<c;a++){let e=t[n.charCodeAt(a)];const o=e|r;e|=(e&s)+s^s;r|=~(e|s);s&=e;r&l&&h++;s&l&&h--;r=r<<1|1;s=s<<1|~(o|r);r&=o}a=o;while(a--)t[e.charCodeAt(a)]=0;return h};const myers_x=(e,n)=>{const o=n.length;const c=e.length;const l=[];const s=[];const r=Math.ceil(o/32);const h=Math.ceil(c/32);for(let t=0;t<r;t++){s[t]=-1;l[t]=0}let a=0;for(;a<h-1;a++){let r=0;let h=-1;const f=32*a;const i=Math.min(32,c)+f;for(let n=f;n<i;n++)t[e.charCodeAt(n)]|=1<<n;for(let e=0;e<o;e++){const o=t[n.charCodeAt(e)];const c=s[e/32|0]>>>e&1;const a=l[e/32|0]>>>e&1;const f=o|r;const i=((o|a)&h)+h^h|o|a;let g=r|~(i|h);let A=h&i;g>>>31^c&&(s[e/32|0]^=1<<e);A>>>31^a&&(l[e/32|0]^=1<<e);g=g<<1|c;A=A<<1|a;h=A|~(f|g);r=g&f}for(let n=f;n<i;n++)t[e.charCodeAt(n)]=0}let f=0;let i=-1;const g=32*a;const A=Math.min(32,c-g)+g;for(let n=g;n<A;n++)t[e.charCodeAt(n)]|=1<<n;let d=c;for(let e=0;e<o;e++){const o=t[n.charCodeAt(e)];const r=s[e/32|0]>>>e&1;const h=l[e/32|0]>>>e&1;const a=o|f;const g=((o|h)&i)+i^i|o|h;let A=f|~(g|i);let C=i&g;d+=A>>>c-1&1;d-=C>>>c-1&1;A>>>31^r&&(s[e/32|0]^=1<<e);C>>>31^h&&(l[e/32|0]^=1<<e);A=A<<1|r;C=C<<1|h;i=C|~(a|A);f=A&a}for(let n=g;n<A;n++)t[e.charCodeAt(n)]=0;return d};const distance=(t,e)=>{if(t.length<e.length){const n=e;e=t;t=n}return 0===e.length?t.length:t.length<=32?myers_32(t,e):myers_x(t,e)};const closest=(t,e)=>{let n=Infinity;let o=0;for(let c=0;c<e.length;c++){const l=distance(t,e[c]);if(l<n){n=l;o=c}}return e[o]};export{closest,distance};

