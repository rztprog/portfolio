import e from"@webassemblyjs/wasm-parser";import t from"@webassemblyjs/ast";import r from"@webassemblyjs/ast/lib/clone";import n from"@webassemblyjs/wasm-opt";import o from"@webassemblyjs/helper-wasm-bytecode";import a from"@webassemblyjs/wasm-gen";import d from"@webassemblyjs/wasm-gen/lib/encoder";import i from"@webassemblyjs/helper-wasm-section";import s from"@webassemblyjs/helper-buffer";var l={};Object.defineProperty(l,"__esModule",{value:true});l.applyOperations=applyOperations;var u=a;var c=d;var f=t;var v=i;var p=s;var y=o;function _sliceIterator(e,t){var r=[];var n=true;var o=false;var a=void 0;try{for(var d=e[Symbol.iterator](),i;!(n=(i=d.next()).done);n=true){r.push(i.value);if(t&&r.length===t)break}}catch(e){o=true;a=e}finally{try{n||null==d["return"]||d["return"]()}finally{if(o)throw a}}return r}function _slicedToArray(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return _sliceIterator(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}function shiftLocNodeByDelta(e,t){(0,f.assertHasLoc)(e);e.loc.start.column+=t;e.loc.end.column+=t}function applyUpdate(e,t,r){var n=_slicedToArray(r,2),o=n[0],a=n[1];var d=0;(0,f.assertHasLoc)(o);var i=(0,y.getSectionForNode)(a);var s=(0,u.encodeNode)(a);t=(0,p.overrideBytesInBuffer)(t,o.loc.start.column,o.loc.end.column,s);"code"===i&&(0,f.traverse)(e,{Func:function Func(e){var r=e.node;var n=void 0!==r.body.find((function(e){return e===a}));if(true===n){(0,f.assertHasLoc)(r);var d=(0,u.encodeNode)(o).length;var i=s.length-d;if(0!==i){var l=r.metadata.bodySize+i;var v=(0,c.encodeU32)(l);var y=r.loc.start.column;var m=y+1;t=(0,p.overrideBytesInBuffer)(t,y,m,v)}}}});var l=s.length-(o.loc.end.column-o.loc.start.column);a.loc={start:{line:-1,column:-1},end:{line:-1,column:-1}};a.loc.start.column=o.loc.start.column;a.loc.end.column=o.loc.start.column+s.length;return{uint8Buffer:t,deltaBytes:l,deltaElements:d}}function applyDelete(e,t,r){var n=-1;(0,f.assertHasLoc)(r);var o=(0,y.getSectionForNode)(r);if("start"===o){var a=(0,f.getSectionMetadata)(e,"start");t=(0,v.removeSections)(e,t,"start");var d=-(a.size.value+1);return{uint8Buffer:t,deltaBytes:d,deltaElements:n}}var i=[];t=(0,p.overrideBytesInBuffer)(t,r.loc.start.column,r.loc.end.column,i);var s=-(r.loc.end.column-r.loc.start.column);return{uint8Buffer:t,deltaBytes:s,deltaElements:n}}function applyAdd(e,t,r){var n=+1;var o=(0,y.getSectionForNode)(r);var a=(0,f.getSectionMetadata)(e,o);if("undefined"===typeof a){var d=(0,v.createEmptySection)(e,t,o);t=d.uint8Buffer;a=d.sectionMetadata}if((0,f.isFunc)(r)){var i=r.body;if(0===i.length||"end"!==i[i.length-1].id)throw new Error("expressions must be ended")}if((0,f.isGlobal)(r)){var i=r.init;if(0===i.length||"end"!==i[i.length-1].id)throw new Error("expressions must be ended")}var s=(0,u.encodeNode)(r);var l=(0,f.getEndOfSection)(a);var c=l;var m=s.length;t=(0,p.overrideBytesInBuffer)(t,l,c,s);r.loc={start:{line:-1,column:l},end:{line:-1,column:l+m}};if("Func"===r.type){var h=s[0];r.metadata={bodySize:h}}"IndexInFuncSection"!==r.type&&(0,f.orderedInsertNode)(e.body[0],r);return{uint8Buffer:t,deltaBytes:m,deltaElements:n}}function applyOperations(e,t,r){r.forEach((function(n){var o;var a;switch(n.kind){case"update":o=applyUpdate(e,t,[n.oldNode,n.node]);a=(0,y.getSectionForNode)(n.node);break;case"delete":o=applyDelete(e,t,n.node);a=(0,y.getSectionForNode)(n.node);break;case"add":o=applyAdd(e,t,n.node);a=(0,y.getSectionForNode)(n.node);break;default:throw new Error("Unknown operation")}if(0!==o.deltaElements&&"start"!==a){var d=o.uint8Buffer.length;o.uint8Buffer=(0,v.resizeSectionVecSize)(e,o.uint8Buffer,a,o.deltaElements);o.deltaBytes+=o.uint8Buffer.length-d}if(0!==o.deltaBytes&&"start"!==a){var i=o.uint8Buffer.length;o.uint8Buffer=(0,v.resizeSectionByteSize)(e,o.uint8Buffer,a,o.deltaBytes);o.deltaBytes+=o.uint8Buffer.length-i}0!==o.deltaBytes&&r.forEach((function(e){switch(e.kind){case"update":shiftLocNodeByDelta(e.oldNode,o.deltaBytes);break;case"delete":shiftLocNodeByDelta(e.node,o.deltaBytes);break}}));t=o.uint8Buffer}));return t}var m={};Object.defineProperty(m,"__esModule",{value:true});m.edit=edit;m.editWithAST=editWithAST;m.add=add;m.addWithAST=addWithAST;var h=e;var b=t;var B=r;var S=n;var w=_interopRequireWildcard(o);var g=l;function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){var n=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,r):{};n.get||n.set?Object.defineProperty(t,r,n):t[r]=e[r]}t.default=e;return t}function hashNode(e){return JSON.stringify(e)}function preprocess(e){var t=(0,S.shrinkPaddedLEB128)(new Uint8Array(e));return t.buffer}function sortBySectionOrder(e){var t=new Map;var r=true;var n=false;var o=void 0;try{for(var a=e[Symbol.iterator](),d;!(r=(d=a.next()).done);r=true){var i=d.value;t.set(i,t.size)}}catch(e){n=true;o=e}finally{try{r||null==a.return||a.return()}finally{if(n)throw o}}e.sort((function(e,r){var n=(0,w.getSectionForNode)(e);var o=(0,w.getSectionForNode)(r);var a=w.default.sections[n];var d=w.default.sections[o];if("number"!==typeof a||"number"!==typeof d)throw new Error("Section id not found");return a===d?t.get(e)-t.get(r):a-d}))}function edit(e,t){e=preprocess(e);var r=(0,h.decode)(e);return editWithAST(r,e,t)}function editWithAST(e,t,r){var n=[];var o=new Uint8Array(t);var a;function before(e,t){a=(0,B.cloneNode)(t.node)}function after(e,t){true===t.node._deleted?n.push({kind:"delete",node:t.node}):hashNode(a)!==hashNode(t.node)&&n.push({kind:"update",oldNode:a,node:t.node})}(0,b.traverse)(e,r,before,after);o=(0,g.applyOperations)(e,o,n);return o.buffer}function add(e,t){e=preprocess(e);var r=(0,h.decode)(e);return addWithAST(r,e,t)}function addWithAST(e,t,r){sortBySectionOrder(r);var n=new Uint8Array(t);var o=r.map((function(e){return{kind:"add",node:e}}));n=(0,g.applyOperations)(e,n,o);return n.buffer}const N=m.__esModule;const A=m.edit,O=m.editWithAST,j=m.add,E=m.addWithAST;export default m;export{N as __esModule,j as add,E as addWithAST,A as edit,O as editWithAST};

