var e={},n=false;function dew(){if(n)return e;n=true;e.getNumberOfLines=function getNumberOfLines(e){let n=-1;let t=-1;do{n++;t=e.indexOf("\n",t+1)}while(t>=0);return n};e.getUnfinishedLine=function getUnfinishedLine(e){const n=e.lastIndexOf("\n");return-1===n?e.length:e.length-n-1};return e}var t={},r=false;function dew$1(){if(r)return t;r=true;const e=dew().getNumberOfLines;const n=dew().getUnfinishedLine;class CodeNode{constructor(e){this.generatedCode=e}clone(){return new CodeNode(this.generatedCode)}getGeneratedCode(){return this.generatedCode}getMappings(t){const r=e(this.generatedCode);const i=Array(r+1).join(";");if(r>0){t.unfinishedGeneratedLine=n(this.generatedCode);return t.unfinishedGeneratedLine>0?i+"A":i}{const e=t.unfinishedGeneratedLine;t.unfinishedGeneratedLine+=n(this.generatedCode);return 0===e&&t.unfinishedGeneratedLine>0?"A":""}}addGeneratedCode(e){this.generatedCode+=e}mapGeneratedCode(e){const n=e(this.generatedCode);return new CodeNode(n)}getNormalizedNodes(){return[this]}merge(e){if(e instanceof CodeNode){this.generatedCode+=e.generatedCode;return this}return false}}t=CodeNode;return t}var i={},s=false;function dew$2(){if(s)return i;s=true;var e={};var n={};"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("").forEach((function(t,r){e[t]=r;n[r]=t}));var t={};t.encode=function base64_encode(e){if(e in n)return n[e];throw new TypeError("Must be between 0 and 63: "+e)};t.decode=function base64_decode(n){if(n in e)return e[n];throw new TypeError("Not a valid base 64 digit: "+n)};var r=5;var o=1<<r;var d=o-1;var u=o;function toVLQSigned(e){return e<0?(-e<<1)+1:(e<<1)+0}function fromVLQSigned(e){var n=1===(1&e);var t=e>>1;return n?-t:t}i.encode=function base64VLQ_encode(e){var n="";var i;var s=toVLQSigned(e);do{i=s&d;s>>>=r;s>0&&(i|=u);n+=t.encode(i)}while(s>0);return n};i.decode=function base64VLQ_decode(e,n){var i=0;var s=e.length;var o=0;var c=0;var a,h;do{if(i>=s)throw new Error("Expected more digits in base 64 VLQ value.");h=t.decode(e.charAt(i++));a=!!(h&u);h&=d;o+=h<<c;c+=r}while(a);n.value=fromVLQSigned(o);n.rest=e.slice(i)};return i}var o={},d=false;function dew$3(){if(d)return o;d=true;const e=dew$2();const n=dew().getNumberOfLines;const t=dew().getUnfinishedLine;const r=";AAAA";class SingleLineNode{constructor(e,t,r,i){this.generatedCode=e;this.originalSource=r;this.source=t;this.line=i||1;this._numberOfLines=n(this.generatedCode);this._endsWithNewLine="\n"===e[e.length-1]}clone(){return new SingleLineNode(this.generatedCode,this.source,this.originalSource,this.line)}getGeneratedCode(){return this.generatedCode}getMappings(n){if(!this.generatedCode)return"";const i=this._numberOfLines;const s=n.ensureSource(this.source,this.originalSource);let o="A";n.unfinishedGeneratedLine&&(o=","+e.encode(n.unfinishedGeneratedLine));o+=e.encode(s-n.currentSource);o+=e.encode(this.line-n.currentOriginalLine);o+="A";n.currentSource=s;n.currentOriginalLine=this.line;const d=n.unfinishedGeneratedLine=t(this.generatedCode);o+=Array(i).join(r);0===d?o+=";":0!==i&&(o+=r);return o}getNormalizedNodes(){return[this]}mapGeneratedCode(e){const n=e(this.generatedCode);return new SingleLineNode(n,this.source,this.originalSource,this.line)}merge(e){return e instanceof SingleLineNode&&this.mergeSingleLineNode(e)}mergeSingleLineNode(e){if(this.source===e.source&&this.originalSource===e.originalSource){if(this.line===e.line){this.generatedCode+=e.generatedCode;this._numberOfLines+=e._numberOfLines;this._endsWithNewLine=e._endsWithNewLine;return this}if(this.line+1===e.line&&this._endsWithNewLine&&1===this._numberOfLines&&e._numberOfLines<=1)return new i(this.generatedCode+e.generatedCode,this.source,this.originalSource,this.line)}return false}}o=SingleLineNode;const i=dew$4();return o}var u={},c=false;function dew$4(){if(c)return u;c=true;const e=dew$2();const n=dew().getNumberOfLines;const t=dew().getUnfinishedLine;const r=";AACA";class SourceNode{constructor(e,t,r,i){this.generatedCode=e;this.originalSource=r;this.source=t;this.startingLine=i||1;this._numberOfLines=n(this.generatedCode);this._endsWithNewLine="\n"===e[e.length-1]}clone(){return new SourceNode(this.generatedCode,this.source,this.originalSource,this.startingLine)}getGeneratedCode(){return this.generatedCode}addGeneratedCode(e){this.generatedCode+=e;this._numberOfLines+=n(e);this._endsWithNewLine="\n"===e[e.length-1]}getMappings(n){if(!this.generatedCode)return"";const i=this._numberOfLines;const s=n.ensureSource(this.source,this.originalSource);let o="A";n.unfinishedGeneratedLine&&(o=","+e.encode(n.unfinishedGeneratedLine));o+=e.encode(s-n.currentSource);o+=e.encode(this.startingLine-n.currentOriginalLine);o+="A";n.currentSource=s;n.currentOriginalLine=this.startingLine+i-1;const d=n.unfinishedGeneratedLine=t(this.generatedCode);o+=Array(i).join(r);if(0===d)o+=";";else{0!==i&&(o+=r);n.currentOriginalLine++}return o}mapGeneratedCode(e){throw new Error("Cannot map generated code on a SourceMap. Normalize to SingleLineNode first.")}getNormalizedNodes(){var e=[];var n=this.startingLine;var t=this.generatedCode;var r=0;var s=t.length;while(r<s){var o=t.indexOf("\n",r)+1;0===o&&(o=s);var d=t.substr(r,o-r);e.push(new i(d,this.source,this.originalSource,n));r=o;n++}return e}merge(e){return e instanceof SourceNode?this.mergeSourceNode(e):e instanceof i&&this.mergeSingleLineNode(e)}mergeSourceNode(e){if(this.source===e.source&&this._endsWithNewLine&&this.startingLine+this._numberOfLines===e.startingLine){this.generatedCode+=e.generatedCode;this._numberOfLines+=e._numberOfLines;this._endsWithNewLine=e._endsWithNewLine;return this}return false}mergeSingleLineNode(e){if(this.source===e.source&&this._endsWithNewLine&&this.startingLine+this._numberOfLines===e.line&&e._numberOfLines<=1){this.addSingleLineNode(e);return this}return false}addSingleLineNode(e){this.generatedCode+=e.generatedCode;this._numberOfLines+=e._numberOfLines;this._endsWithNewLine=e._endsWithNewLine}}u=SourceNode;const i=dew$3();return u}var a={},h=false;function dew$5(){if(h)return a;h=true;class MappingsContext{constructor(){this.sourcesIndices=new Map;this.sourcesContent=new Map;this.hasSourceContent=false;this.currentOriginalLine=1;this.currentSource=0;this.unfinishedGeneratedLine=false}ensureSource(e,n){let t=this.sourcesIndices.get(e);if("number"===typeof t)return t;t=this.sourcesIndices.size;this.sourcesIndices.set(e,t);this.sourcesContent.set(e,n);"string"===typeof n&&(this.hasSourceContent=true);return t}getArrays(){const e=[];const n=[];for(const t of this.sourcesContent){e.push(t[0]);n.push(t[1])}return{sources:e,sourcesContent:n}}}a=MappingsContext;return a}var l={},f=false;function dew$6(){if(f)return l;f=true;const e=dew$1();const n=dew$4();const t=dew$5();const r=dew().getNumberOfLines;class SourceListMap{constructor(e,n,t){if(Array.isArray(e))this.children=e;else{this.children=[];(e||n)&&this.add(e,n,t)}}add(t,r,i){if("string"===typeof t)r?this.children.push(new n(t,r,i)):this.children.length>0&&this.children[this.children.length-1]instanceof e?this.children[this.children.length-1].addGeneratedCode(t):this.children.push(new e(t));else if(t.getMappings&&t.getGeneratedCode)this.children.push(t);else{if(!t.children)throw new Error("Invalid arguments to SourceListMap.protfotype.add: Expected string, Node or SourceListMap");t.children.forEach((function(e){this.children.push(e)}),this)}}preprend(t,r,i){if("string"===typeof t)r?this.children.unshift(new n(t,r,i)):this.children.length>0&&this.children[this.children.length-1].preprendGeneratedCode?this.children[this.children.length-1].preprendGeneratedCode(t):this.children.unshift(new e(t));else if(t.getMappings&&t.getGeneratedCode)this.children.unshift(t);else{if(!t.children)throw new Error("Invalid arguments to SourceListMap.protfotype.prerend: Expected string, Node or SourceListMap");t.children.slice().reverse().forEach((function(e){this.children.unshift(e)}),this)}}mapGeneratedCode(e){const n=[];this.children.forEach((function(e){e.getNormalizedNodes().forEach((function(e){n.push(e)}))}));const t=[];n.forEach((function(n){n=n.mapGeneratedCode(e);if(0===t.length)t.push(n);else{const e=t[t.length-1];const r=e.merge(n);r?t[t.length-1]=r:t.push(n)}}));return new SourceListMap(t)}toString(){return this.children.map((function(e){return e.getGeneratedCode()})).join("")}toStringWithSourceMap(e){const n=new t;const r=this.children.map((function(e){return e.getGeneratedCode()})).join("");const i=this.children.map((function(e){return e.getMappings(n)})).join("");const s=n.getArrays();return{source:r,map:{version:3,file:e&&e.file,sources:s.sources,sourcesContent:n.hasSourceContent?s.sourcesContent:void 0,mappings:i}}}}l=SourceListMap;return l}var g={},L=false;function dew$7(){if(L)return g;L=true;const e=dew$2();const n=dew$4();const t=dew$1();const r=dew$6();g=function fromStringWithSourceMap(i,s){const o=s.sources;const d=s.sourcesContent;const u=s.mappings.split(";");const c=i.split("\n");const a=[];let h=null;let l=1;let f=0;let g;function addCode(e){if(h&&h instanceof t)h.addGeneratedCode(e);else if(h&&h instanceof n&&!e.trim()){h.addGeneratedCode(e);g++}else{h=new t(e);a.push(h)}}function addSource(e,t,r,i){if(h&&h instanceof n&&h.source===t&&g===i){h.addGeneratedCode(e);g++}else{h=new n(e,t,r,i);g=i+1;a.push(h)}}u.forEach((function(e,n){let t=c[n];if("undefined"===typeof t)return;n!==c.length-1&&(t+="\n");if(!e)return addCode(t);e={value:0,rest:e};let r=false;while(e.rest)r=processMapping(e,t,r)||r;r||addCode(t)}));if(u.length<c.length){let e=u.length;while(!c[e].trim()&&e<c.length-1){addCode(c[e]+"\n");e++}addCode(c.slice(e).join("\n"))}return new r(a);function processMapping(n,t,r){n.rest&&","!==n.rest[0]&&e.decode(n.rest,n);if(!n.rest)return false;if(","===n.rest[0]){n.rest=n.rest.substr(1);return false}e.decode(n.rest,n);const i=n.value+f;f=i;let s;if(n.rest&&","!==n.rest[0]){e.decode(n.rest,n);s=n.value+l;l=s}else s=l;if(n.rest){const e=n.rest.indexOf(",");n.rest=-1===e?"":n.rest.substr(e)}if(!r){addSource(t,o?o[i]:null,d?d[i]:null,s);return true}}};return g}var p={},w=false;function dew$8(){if(w)return p;w=true;p.SourceListMap=dew$6();p.SourceNode=dew$4();p.SingleLineNode=dew$3();p.CodeNode=dew$1();p.MappingsContext=dew$5();p.fromStringWithSourceMap=dew$7();return p}const C=dew$8();var S=C.SourceListMap,m=C.SourceNode,N=C.SingleLineNode,v=C.CodeNode,b=C.MappingsContext,_=C.fromStringWithSourceMap;export default C;export{v as CodeNode,b as MappingsContext,N as SingleLineNode,S as SourceListMap,m as SourceNode,dew$8 as __dew,_ as fromStringWithSourceMap};

